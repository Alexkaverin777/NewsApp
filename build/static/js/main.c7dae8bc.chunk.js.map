{"version":3,"sources":["components/Header/Header.js","allFuncition.js","components/Main/NewsPost/NewPost.js","components/Main/Main.js","components/AllNews/AllNews.js","components/Footer/Footer.js","components/Contact/Contact.js","components/News/News.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","classHeader","taxtLogo","headerMenu","to","addZero","number","getMonth","item","Date","publishedAt","getDay","getDate","NewPost","month","formattedMonth","day","formattedDay","onClick","clickTitle","title","href","url","source","Main","allNews","data","newsArr","filter","index","map","funClickMe","key","name","titleBlock","titleSpan","titleSpanColor","allNewsLink","AllNews","Footer","Contact","src","alt","News","titleArr","split","lenghtTitleArr","length","splice","join","titleExceptTheLast","titleColorEndBlue","urlToImage","description","content","App","React","useState","updateData","useEffect","a","Axios","get","response","articles","fetchData","useFetch","objNews","setObjNews","findsTheDesiredObject","elm","find","path","exact","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7dae8bc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.scss';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<header className={`header ${props.classHeader}`}>\r\n\t\t\t<div className=\"wrapper-header\">\r\n\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t{props.taxtLogo}\r\n\t\t\t\t</div>\r\n\t\t\t\t<menu className={`menu-header ${props.headerMenu}`}>\r\n\t\t\t\t\t<li className=\"menu__item\">\r\n\t\t\t\t\t\t<NavLink to=\"/\" className=\"menu__link\">Главная</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"menu__item\">\r\n\t\t\t\t\t\t<NavLink to=\"/allNews\" className=\"menu__link\">Новости</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"menu__item\">\r\n\t\t\t\t\t\t<NavLink to=\"/contact\" className=\"menu__link\">Контакты </NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</menu>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n};\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst addZero = number => {\r\n\tconst resalt = number < 10 ? '0' + number : number;\r\n\treturn resalt\r\n};\r\nconst getMonth = (item) => {\r\n\tlet dateDay = new Date(item.publishedAt);\r\n\tlet month = dateDay.getMonth();\r\n\treturn month\r\n};\r\n\r\nconst getDay = (item) => {\r\n\tlet dateDay = new Date(item.publishedAt);\r\n\tlet day = dateDay.getDate();\r\n\treturn day\r\n};\r\n\r\n\r\nexport {getMonth, getDay, addZero}","import React from \"react\";\r\nimport './newPost.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {addZero, getDay, getMonth} from \"../../../allFuncition\";\r\n\r\n\r\nconst NewPost = props => {\r\n\tconst item = props.item;\r\n\r\n\tconst month = getMonth(item);\r\n\tconst formattedMonth = addZero(month + 1);\r\n\r\n\tconst day = getDay(item);\r\n\tconst formattedDay = addZero(day);\r\n\r\n\treturn (\r\n\t\t<div className=\"post\" >\r\n\t\t\t<NavLink to='/news/postNews' className=\"post__title line-blue\" onClick={props.clickTitle}>\r\n\t\t\t\t{props.title}\r\n\t\t\t</NavLink>\r\n\t\t\t<div className=\"link-bloc\">\r\n\t\t\t\t<a href={ props.url} >{props.source}</a>\r\n\t\t\t\t<div className=\"link-bloc__date\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{formattedDay}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t/ {formattedMonth}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default NewPost\r\n","import React from \"react\";\r\nimport './main.scss'\r\nimport NewPost from \"./NewsPost/NewPost\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Main = props => {\r\n\tconst allNews = props.data;\r\n\tconst newsArr = allNews && allNews.filter((item, index) => index < 6)\r\n\t\t.map((item, index) => (\r\n\t\t\t<NewPost\r\n\t\t\t\tclickTitle={() => props.funClickMe(item.url)}\r\n\t\t\t\tkey={index}\r\n\t\t\t\ttitle={item.title}\r\n\t\t\t\tsource={item.source.name}\r\n\t\t\t\turl={item.url}\r\n\t\t\t\titem={item}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\t<span className=\"title-span-block\">{props.titleBlock} </span>\r\n\t\t\t\t{props.titleSpan}\r\n\t\t\t\t<span className=\"color-active\">\r\n\t\t\t\t\t{props.titleSpanColor}\r\n\t\t\t\t</span>\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"wrapper-post\">\r\n\t\t\t\t{newsArr}\r\n\t\t\t</div>\r\n\t\t\t<div className={props.allNews}>\r\n\t\t\t\t<NavLink to=\"/allNews\" className=\"allNews__link\">{props.allNewsLink}</NavLink>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t)\r\n};\r\nexport default Main\r\n","import React from \"react\";\r\nimport NewPost from \"../Main/NewsPost/NewPost\";\r\n\r\nconst AllNews = props => {\r\n\tconst allNews = props.data;\r\n\tconst newsArr = allNews && allNews.filter((item, index) => index < 18)\r\n\t\t.map((item, index) => (\r\n\t\t\t<NewPost\r\n\t\t\t\tclickTitle={() => props.funClickMe(item.url)}\r\n\t\t\t\tkey={index}\r\n\t\t\t\ttitle={item.title}\r\n\t\t\t\tsource={item.source.name}\r\n\t\t\t\turl={item.url}\r\n\r\n\t\t\t\titem={item}\r\n\t\t\t/>\r\n\t\t));\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\t<span className=\"title-span-block\">{props.titleBlock} </span>\r\n\t\t\t\t{props.titleSpan}\r\n\t\t\t\t<span className=\"color-active\">\r\n\t\t\t\t\t{props.titleSpanColor}\r\n\t\t\t\t</span>\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"wrapper-post\">\r\n\t\t\t\t{newsArr}\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t)\r\n\r\n\r\n};\r\n\r\nexport default AllNews","import React from \"react\";\r\nimport './footer.scss';\r\n\r\nconst Footer = props => {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<div className=\"footer-title\">\r\n\t\t\t\t<h4 className=\"block-title__title\">\r\n\t\t\t\t\tНовостник\r\n\t\t\t\t</h4>\r\n\t\t\t\t<span className=\"block-title__subtitle\">\r\n\t\t\t\t\tSingle Page Application\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"footer-project\">\r\n\t\t\t\t<span className=\"footer-project__text\">\r\n\t\t\t\t\tДипломный проект\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"developed\">\r\n\t\t\t\t<span className=\"developed__subtitle\">\r\n\t\t\t\t\tMade by\r\n\t\t\t\t</span>\r\n\t\t\t\t<h4 className=\"developed__title\">\r\n\t\t\t\t\tАлександр Каверин\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport './contact.scss';\r\n\r\nconst Contact = props => {\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t\t<div className=\"contact-wrapper\">\r\n\t\t\t\t<div className=\"block-data\">\r\n\t\t\t\t\t<h2 className=\"block-data__number\">\r\n\t\t\t\t\t\t<a href=\"tel:+380951116726\">+38 (095) 1116726</a>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"block-data__name line-blue\">\r\n\t\t\t\t\t\tАлександр Каверин\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"block-data__mail\">\r\n\t\t\t\t\t\t<a href=\"mailto:kaverin125@gmail.com\">kaverin125@gmail.com</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"block-data__skills\">\r\n\t\t\t\t\t\tJavaScript разработчик\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"block-data__skills-subtitle\">\r\n\t\t\t\t\t\tES5, ES6, <span>React</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"block-img\">\r\n\t\t\t\t\t<img src=\"img-contact/Rectangle 9.png\" alt=\"\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t)\r\n};\r\n\r\nexport default Contact","import React from \"react\";\r\nimport './News.scss'\r\nimport {addZero, getDay, getMonth} from \"../../allFuncition\";\r\n\r\nconst News = props => {\r\n\tconst data = props.data;\r\n\r\n\tconst titleColorEndBlue = (data) =>{\r\n\t\tconst titleArr = data.title.split(' ');\r\n\t\tconst lenghtTitleArr = titleArr.length;\r\n\t\tconst endElmTitleArr = titleArr.splice(lenghtTitleArr - 1).join();\r\n\t\treturn endElmTitleArr\r\n\t};\r\n\r\n\tconst titleExceptTheLast = data => {\r\n\t\tconst titleArr = data.title.split(' ');\r\n\t\tconst lenghtTitleArr = titleArr.length;\r\n\t\tconst arrTitleTheLast = titleArr.splice(0, lenghtTitleArr -1).join(' ');\r\n\t\treturn arrTitleTheLast\r\n\t};\r\n\r\n\tconst month = getMonth(data);\r\n\tconst formattedMonth = addZero(month + 1);\r\n\r\n\tconst day = getDay(data);\r\n\tconst formattedDay = addZero(day);\r\n\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t\t<div className=\"wrapper-news\">\r\n\t\t\t\t<div className=\"block-posts\">\r\n\t\t\t\t\t<h2 className=\"block-posts__title\">\r\n\t\t\t\t\t\t{titleExceptTheLast(data)} <span>{titleColorEndBlue(data)}</span>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<a href={data.url} className=\"block-posts__link\">{data.source.name}</a>\r\n\t\t\t\t\t<div className=\"block-posts__date\">\r\n\t\t\t\t\t\t{formattedMonth}<span>/{formattedDay}</span>\r\n\t\t\t\t\t</div>\r\n\t \t\t\t</div>\r\n\t\t\t\t<article className=\"article\">\r\n\t\t\t\t\t<img src={data.urlToImage} alt=\"картинка\"/>\r\n\t\t\t\t\t<p className=\"text\">\r\n\t\t\t\t\t\t{data.description}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"text\">\r\n\t\t\t\t\t\t{data.content}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t)\r\n};\r\n\r\nexport default News","import React, {useEffect} from 'react';\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport AllNews from \"./components/AllNews/AllNews\";\nimport Footer from \"./components/Footer/Footer\";\nimport Contact from \"./components/Contact/Contact\";\nimport News from \"./components/News/News\";\nimport {Route, Redirect} from 'react-router-dom';\nimport Axios from \"axios\";\n\nconst useFetch = () => {\n\tconst [data, updateData] = React.useState(null);\n\tconst requestUrl = 'http://newsapi.org/v2/top-headlines?' + 'country=us&' + 'apiKey=f2ecd509c3e0445abdedf006b3116a0b';\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await Axios.get(requestUrl);\n\t\t\tupdateData(response.data.articles);\n\t\t};\n\t\tfetchData()\n\t}, []);\n\treturn data\n};\n\nfunction App() {\n\tconst data = useFetch();\n\tconst [objNews, setObjNews] = React.useState('');\n\n\tconst findsTheDesiredObject = (url) => {\n\t\tconst elm = data.find( (item) => item.url === url);\n\t\tsetObjNews(elm);\n\t};\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header\n\t\t\t\ttaxtLogo='Новостник'\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath='/'\n\t\t\t\texact\n\t\t\t\trender={() => (\n\t\t\t\t\t<Main\n\t\t\t\t\t\tfunClickMe={findsTheDesiredObject}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\ttitleBlock=\"Всегда\"\n\t\t\t\t\t\ttitleSpan=\"свежие\"\n\t\t\t\t\t\ttitleSpanColor=\"новости\"\n\t\t\t\t\t\tallNews=\"allNews\"\n\t\t\t\t\t\tallNewsLink=\"Быть в курсе событий\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath='/allNews'\n\t\t\t\texact\n\t\t\t\trender={() => (\n\t\t\t\t\t<AllNews\n\t\t\t\t\t\tfunClickMe={findsTheDesiredObject}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\ttitleBlock=\"Быть\"\n\t\t\t\t\t\ttitleSpan=\"в курсе\"\n\t\t\t\t\t\ttitleSpanColor=\"событий\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath='/contact'\n\t\t\t\tcomponent={Contact}\n\t\t\t/>\n\t\t\t<Route\tpath='/news/:news'\n\t\t\t\trender={() => (<News data={objNews}\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Footer/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}